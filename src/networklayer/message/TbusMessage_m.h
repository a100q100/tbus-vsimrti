//
// Generated file, do not edit! Created by opp_msgc 4.4 from networklayer/message/TbusMessage.msg.
//

#ifndef _TBUSMESSAGE_M_H_
#define _TBUSMESSAGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0404
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Class generated from <tt>networklayer/message/TbusMessage.msg</tt> by opp_msgc.
 * <pre>
 * packet TbusMessage {
 * 	string encMessage; 
 * 	string senderHostName; 
 * 	string receiverHostName; 
 * }
 * </pre>
 */
class TbusMessage : public ::cPacket
{
  protected:
    opp_string encMessage_var;
    opp_string senderHostName_var;
    opp_string receiverHostName_var;

  private:
    void copy(const TbusMessage& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TbusMessage&);

  public:
    TbusMessage(const char *name=NULL, int kind=0);
    TbusMessage(const TbusMessage& other);
    virtual ~TbusMessage();
    TbusMessage& operator=(const TbusMessage& other);
    virtual TbusMessage *dup() const {return new TbusMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual const char * getEncMessage() const;
    virtual void setEncMessage(const char * encMessage);
    virtual const char * getSenderHostName() const;
    virtual void setSenderHostName(const char * senderHostName);
    virtual const char * getReceiverHostName() const;
    virtual void setReceiverHostName(const char * receiverHostName);
};

inline void doPacking(cCommBuffer *b, TbusMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, TbusMessage& obj) {obj.parsimUnpack(b);}


#endif // _TBUSMESSAGE_M_H_
